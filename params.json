{"name":"vcharts","tagline":"跨平台图表","body":"# VCharts\r\n\r\nvcharts是一套JavaScript实现的图表库。仅使用很少的代码，就能使数据图形化。\r\n目前为测试阶段，已经完成了常用的饼图（PieChart）、序列图（SerialChart）类型的图表。\r\n\r\n## 引入vcharts.js\r\n只需要vcharts.js\r\n\r\n\t<script type=\"text/javascript\" src=\"/your/path/vcharts.js\"></script>\r\n\r\n## 创建图表\r\n\r\nvcharts按轴的不同分为以下几种图表\r\n\r\n**序列图**\r\n以一个序列为统一轴来展示数据，我们常见的柱状图、曲线图、面积图及其混合图都属于这种类型的图表。创建方法如下：\r\n\r\n`new vcharts.SerialChart(\"mychartdiv\");`\r\n\r\n`vcharts.SerialChart`表示这是一个序列图表，`\"mychartdiv\"`为此图表在HTML中的div容器，。\r\n\r\n*提示：*不必在window.load之后操作，vcharts内部已经帮你做了兼容。\r\n\r\n**饼图**\r\n描述单项占全部百分比，创建方法如下：\r\n\r\n`new vcharts.PieChart(\"chartdiv\");`\r\n\r\n这里我们创建一个序列图为例\r\n\r\n\tvar mychart = new vcharts.SerialChart(\"mychartdiv\");\r\n\t\r\n这时在html页面里应该能看到vcharts提示**no data**字样，说明已经成功创建了一个图表，如果没有看到提示，请检查是否引入了vcharts.js库文件，及路径是否正确。\r\n\r\n接下来给它添加数据了。\r\n\r\n## 数据\r\nvcharts的数据为json数组表示，这里是一个简单的例子。\r\n\r\n\tmychart.setData([{\r\n\t\t\tlabel:\"1月\",\r\n\t\t\tvalue:\"23\"\r\n\t\t},{\r\n\t\t\tlabel:\"2月\",\r\n\t\t\tvalue:\"26\"\r\n\t\t},{\r\n\t\t\tlabel:\"3月\",\r\n\t\t\tvalue:\"39\"\r\n\t\t}]);\r\n\r\n这时刷新页面，数据图表就显示出来了。\r\n\r\n\r\n## 配置\r\n\r\nvcharts中的数据和其配置是一对好兄弟。配置用于设置如何显示数据，表示序列的key。\r\n\r\n内部有一个默认的配置表。只设置其特殊部分即可，它们会被合并到已有的配置上。\r\n\r\n\tmychart.setConfig({\r\n\t\ttitle : {\r\n\t\t\tname : \"标题\"\r\n\t\t},\r\n\t\tserialKey : 'label',\r\n\t\tgraphs : [{\r\n\t\t\tname : \"销售量\",\r\n\t\t\tvalueKey : \"value\"\r\n\t\t}]\r\n\t});\r\n\t\r\n完整配置表及详细说明请查看\r\n\r\n## 尺寸\r\nvcharts接受三种方式设置尺寸，优先级最高的是通过setSize(width, height)设置：\r\n\r\n\tmychart.setSize(500, 300);\r\n\r\n如未用此方法设置，读取css样式上的尺寸。若css样式也未设置，则使用默认大小。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}